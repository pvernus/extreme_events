---
title: "Differences between No-/Appeal years"
format: html
editor: visual
---

```{r}
load(here("data", "assignment.RData"))
```

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
  tidyverse,
  rstatix,
  ggpubr
  )
```

We focus on **disbursement** and **'appeal' events** (proxy of the most extreme events / disasters).

We restrict the data to pairs of actors both registered in the CRS data set at year t.

Besides, we want to compare estimands between treated and not-treated years, so we also remove countries that have not experienced an 'appeal' event during the period 2002-2022.

```{r}
data_appeal <- assignment_universe[, never_treated := sum(appeal_n, na.rm = TRUE),
                                   by = recipient_name
][never_treated != 0]
```

# Recipient side

## Extensive margin

$Nb.donor_{recipient, year} \sim\ Event_{year}$

```{r}
dt <- data_appeal[, .(year, recipient_name, # population
                donor_code, sector_code, disbursement, # Estimand
                appeal_dummy) # Treatment
][, treatment := as.numeric(as.character(appeal_dummy))
][, .(
  nb_donor = uniqueN(donor_code[disbursement!=0]), 
  nb_sector = uniqueN(sector_code[disbursement!=0])
), by = .(year, recipient_name, treatment)
][order(recipient_name, -year)
][]

diff <- test[, `:=` (
  nb_donor_post = shift(nb_donor, 1L, type="lag"),
  nb_donor_pre = shift(nb_donor, 1L, type="lead")),
  by = recipient_name
][, `:=` (
  `t - t-1` = nb_donor - nb_donor_pre,
  `t+1 - t` = nb_donor_post - nb_donor
)
][treatment==1]

dt_long <- melt(diff, id.vars = c("year", "recipient_name"),
     measure.vars = c("t - t-1", "t+1 - t"),
     variable.name = "period",
     value.name = "diff")

stat <- summarize(dt_long, 
                  mean=mean(diff, na.rm = T),
                  median=median(diff, na.rm = T),
                  .by = period)

# density plot
dt_long |> 
  filter(!is.na(diff)) |> 
  ggplot(aes(x=diff, color=period, fill=period)) +
  geom_density(alpha=.3) +
  geom_vline(data=stat, aes(xintercept = mean,
                            color = period)) +
  geom_vline(data=stat, aes(xintercept = median,
                            color = period),
             linetype="dotted") +
  labs(x = "Difference in number of donors", 
       caption = "Linetype: straight=mean, dotted=median") +
  theme_minimal() +
  theme(legend.position = "bottom")

# table summary
dt_long |> 
  rename(Difference = diff) |> 
  tbl_summary(
    by = period,
    include=Difference
  ) |> 
  add_p()
```

$Nb.sector_{recipient, year} \sim\ Event$

```{r}

```

```{r}
# function data
recip_ext_data <- function(dummy){
  
  recip_ext <- data[, variety_code := paste(donor_code, sector_code, sep = "_"),
                    by = recipient_name
  ][, never_treated := sum(appeal_n, na.rm = TRUE), by = recipient_name
  ][never_treated != 0
  ][, treatment := ifelse(get(dummy) == 0, "Not Treated", "Treated")
  ][, .(
    n_donor = n_distinct(donor_code[disbursement!=0]),
    n_sector = n_distinct(sector_code[disbursement!=0]),
    n_variety = n_distinct(variety_code[disbursement!=0])
  ), by = .(recipient_name, treatment)
  ][order(recipient_name)
  ][]
  
return(recip_ext)
  
}

# function table
table_sum <- function(data){
  
  table <- data |> 
  rename(Donors = n_donor,
         Sectors = n_sector,
         Variety = n_variety) |> 
  tbl_summary(
    by=treatment,
    include = -recipient_name,
    type = list(
      Donors ~ "continuous",
      Sectors ~ "continuous",
      Variety ~ "continuous"
      )) |> 
  add_p(test = list(
    all_continuous() ~ "paired.wilcox.test"),
    group = recipient_name)
  
  return(table)
}
```

```{r}
recip_ext_switch <- recip_ext_data('appeal_dummy')
recip_ext_single <- recip_ext_data('never_treated_appeal')
```

```{r}
# 
table_sum(recip_ext_switch) |> modify_caption("Switching Treatment")
table_sum(recip_ext_single) |> modify_caption("Single Treatment")
```

> During the year of a disaster, the number of active providers, sectors, and provider-sector pairs decrease significantly.
>
> The remaining providers and sectors are not necessarily the same.

## Intensive margin (mean flows)

```{r}
# function 1
intensive_data <- function(dummy){
  
dt <- data[, variety_code := paste(donor_code, sector_code, sep = "_")
  ][, never_treated := sum(appeal_n, na.rm = TRUE), by = recipient_name
  ][never_treated != 0
  ][, treatment := ifelse(get(dummy) == 0, "Not Treated", "Treated")
  ][, donor := sum(disbursement, na.rm = T), 
    by = .(recipient_name, donor_code, year, treatment)
  ][, sector := sum(disbursement, na.rm = T), 
    by = .(recipient_name, sector_code, year, treatment)
  ][, variety := sum(disbursement, na.rm = T), 
    by = .(recipient_name, variety_code, year, treatment)
  ][, .(
    donor_mean = mean(donor, na.rm = T),
    sector_mean = mean(sector, na.rm = T),
    variety_mean = mean(variety, na.rm = T)
  ), by = .(recipient_name, treatment)
  ][order(recipient_name)
  ]
  
return(dt)
  
}

test <- intensive_data('appeal_dummy')

# function table
table_sum <- function(data){
  
  table <- test |> 
  tbl_summary(
    by=treatment,
    include = -recipient_name
      ) |> 
  add_p(test = list(
    all_continuous() ~ "paired.wilcox.test"),
    group = recipient_name)
  
  return(table)
}
```

> On average, disbursement at the donor, sector, and donor-sector pair levels decrease significantly during the year of a disaster.

## Function

```{r}
# function
set_data_finance <- function(col_n, col_dummy){
  
  setDT(data)

  dt <- data[!is.na(disbursement) # remove obs out of the 'universe'
  ][, never_treated := sum(get(col_n), na.rm = TRUE), by = recipient_name
  ][never_treated != 0
  ][, treatment := ifelse(get(col_dummy) == 0, "No", "Yes")
  ][, .(
      commitment_mean = mean(commitment, na.rm = TRUE),
      disbursement_mean = mean(disbursement, na.rm = TRUE)
  ), by = .(recipient_name, treatment)
  ][order(recipient_name)] 
    
  return(dt)
}
```

## Data

```{r}
finance_single <- set_data_finance('appeal_n', 'never_treated_appeal')
finance_switch <- set_data_finance('appeal_n', 'appeal_dummy')
```

### Cleveland plot

```{r}
cleveland_plot_data <- function(data){
  
  setDT(data)

  data |> 
    pivot_wider(id_cols = -disbursement_mean, 
                names_from = treatment, values_from = commitment_mean) |> 
    mutate(recipient_name = fct_reorder(recipient_name, No)) |> 
    ggplot() +
    geom_segment(aes(x=recipient_name, xend=recipient_name, y=No, yend=Yes), 
                 color="grey40") +
    geom_point( aes(x=recipient_name, y=No), color="darkgrey", size=3 ) +
    geom_point( aes(x=recipient_name, y=Yes), color="orange", size=3 ) +
    coord_flip()+
    xlab("") +
    ylab("Avg. yearly commitment, MUSD") +
    theme_light() +
    theme(plot.subtitle = element_markdown())

}
```

```{r}
cleveland_plot_data(finance_single) + 
  labs(title = "Single treatment", 
       subtitle = "<span style = 'color: orange;'>Orange</span> = Treated")
cleveland_plot_data(finance_switch) + 
  labs(title = "Switching treatment", 
       subtitle = "<span style = 'color: orange;'>Orange</span> = Treated")
```

### Boxplot

```{r}
boxplot_data <- function(data){
  ggplot(data,
       aes(x=treatment, y=disbursement_mean)) +
  geom_boxplot(fill = c("darkgrey", "orange")) +
  theme_light() +
  labs(y="Avg. yearly disbursement, MUSD")
}
```

```{r}
boxplot_data(finance_single) + labs(title = "Single treatment")
boxplot_data(finance_switch) + labs(title = "Switching treatment")
```

### Desc. stat.

```{r}
# compare two groups (non-parametric test)
tab_summary_data <- function(data){
  
  data |> 
  rename(`Commitment, MUSD (avg)` = commitment_mean,
         `Disbursements, MUSD (avg)` = disbursement_mean) |> 
  tbl_summary(
    by=treatment,
    include = -recipient_name,
    type = list(
      `Commitment, MUSD (avg)` ~ "continuous",
      `Disbursements, MUSD (avg)` ~ "continuous")
  ) |> 
  add_p(test = list(
    all_continuous() ~ "paired.wilcox.test"),
    group = recipient_name)
}
```

```{r}
tab_summary_data(finance_single)
tab_summary_data(finance_switch)
```

> Conclusion: no significant difference between treated and not treated observations in mean commitment/disbursement. However, it is possible that the increase in external finance only occurs during the following years.

## Channel of delivery

```{r}
# function data
channel_data <- function(dummy, channel){
  
channel <- data[, variety_code := paste(donor_code, sector_code, sep = "_"),
                    by = recipient_name
  ][, never_treated := sum(appeal_n, na.rm = TRUE), by = recipient_name
  ][never_treated != 0
  ][, treatment := ifelse(get(dummy) == 0, "Not Treated", "Treated")
  ][, donor := sum(disbursement[get(channel)==1], na.rm = T)/
              sum(disbursement, na.rm = T), 
    by = .(recipient_name, donor_name, year, treatment)
  ][, sector := sum(disbursement[get(channel)==1], na.rm = T)/
              sum(disbursement, na.rm = T), 
    by = .(recipient_name, sector_name, year, treatment)
  ][, variety := sum(disbursement[get(channel)==1], na.rm = T)/
              sum(disbursement, na.rm = T), 
    by = .(recipient_name, variety_code, year, treatment)
  ][, .(
    donor_mean = mean(donor, na.rm = T),
    donor_med = median(donor, na.rm = T),
    sector_mean = mean(sector, na.rm = T),
    sector_med = median(sector, na.rm = T),
    variety_mean = mean(variety, na.rm = T),
    variety_med = median(variety, na.rm = T)
  ), by = .(recipient_name, treatment)
  ][order(recipient_name)
  ]
  
return(channel)
  
}

test <- channel_data('appeal_dummy', 'channel_nonstate')

# function table
table_sum <- function(data){
  
  table <- test |> 
  tbl_summary(
    by=treatment,
    include = -recipient_name
      ) |> 
  add_p(test = list(
    all_continuous() ~ "paired.wilcox.test"),
    group = recipient_name)
  
  return(table)
}
```

> On average, no significant change in the choice between State or non-State channels of delivery between years with and without disasters.

## Function

```{r}
# function
set_data_channel <- function(col_n, col_dummy){
  
  setDT(data)

  dt <- data[!is.na(disbursement) # remove obs out of the 'universe'
  ][, never_treated := sum(get(col_n), na.rm = TRUE), 
    by = .(recipient_code, recipient_name)
  ][never_treated != 0
  ][, treatment := ifelse(get(col_dummy) == 0, "No", "Yes")
  ][, .(
    channel_nonstate_mean = mean(channel_nonstate, na.rm = T),
    channel_nonstate_ngo_mean = mean(channel_nonstate_ngo, na.rm = T),
    channel_nonstate_multi_mean = mean(channel_nonstate_multi, na.rm = T),
    channel_nonstate_private_mean = mean(channel_nonstate_private, na.rm = T)
    ),
    by = .(recipient_name, treatment)
  ][order(recipient_name)]

   return(dt)
}
```

## Data

```{r}
channel_single <- set_data_channel('appeal_n', 'never_treated_appeal')
channel_switch <- set_data_channel('appeal_n', 'appeal_dummy')
```

### Cleveland plot

```{r}
# nonState
channel |> 
  pivot_wider(id_cols = recipient_name, 
              names_from = appeal, values_from = channel_nonstate_mean) |> 
  mutate(recipient_name = fct_reorder(recipient_name, No)) |> 
  ggplot() +
  geom_segment(aes(x=recipient_name, xend=recipient_name, y=No, yend=Yes), 
               color="grey40") +
  geom_point( aes(x=recipient_name, y=No), color="darkgrey", size=3 ) +
  geom_point( aes(x=recipient_name, y=Yes), color="orange", size=3 ) +
  coord_flip()+
  xlab("") +
  ylab("Avg. share of nonState bypass") +
  theme_light()

# nonState NGO
channel |> 
  pivot_wider(id_cols = recipient_name, 
              names_from = appeal, values_from = channel_nonstate_ngo_mean) |> 
  mutate(recipient_name = fct_reorder(recipient_name, No)) |> 
  ggplot() +
  geom_segment(aes(x=recipient_name, xend=recipient_name, y=No, yend=Yes), 
               color="grey40") +
  geom_point( aes(x=recipient_name, y=No), color="darkgrey", size=3 ) +
  geom_point( aes(x=recipient_name, y=Yes), color="orange", size=3 ) +
  coord_flip()+
  xlab("") +
  ylab("Avg. share of nonState NGO bypass") +
  theme_light()

# nonState Other
channel |> 
  pivot_wider(id_cols = recipient_name, 
              names_from = appeal, values_from = channel_nonstate_other_mean) |> 
  mutate(recipient_name = fct_reorder(recipient_name, No)) |> 
  ggplot() +
  geom_segment(aes(x=recipient_name, xend=recipient_name, y=No, yend=Yes), 
               color="grey40") +
  geom_point( aes(x=recipient_name, y=No), color="darkgrey", size=3 ) +
  geom_point( aes(x=recipient_name, y=Yes), color="orange", size=3 ) +
  coord_flip()+
  xlab("") +
  ylab("Avg. share of nonState nonNGO bypass") +
  theme_light()
```

### Boxplot

```{r}
channel_single |> 
  pivot_longer(cols = starts_with("channel"), 
               names_to = "channel", values_to = "share") |> 
  ggplot(aes(x=treatment, y=share, fill=channel)) +
  geom_boxplot() +
  theme_light() +
  labs(x="Disaster year leading to intern. assistance appeal", 
       y="Share (%)")
```

### Desc. stat.

```{r}
# Compare two groups
channel |> 
  tbl_summary(
    by=appeal,
    include = -recipient_name,
    type = list(
      channel_nonstate_mean ~ "continuous",
      channel_nonstate_ngo_mean ~ "continuous",
      channel_nonstate_other_mean ~ "continuous")
  ) |> 
  add_p(test = list(
    all_continuous() ~ "paired.wilcox.test"),
    group = recipient_name)

# compare two groups (non-parametric test)
channel  %>%
  wilcox_test(channel_nonstate_mean ~ appeal, paired = TRUE) |> 
  add_significance()

channel  %>%
  wilcox_test(channel_nonstate_ngo_mean ~ appeal, paired = TRUE) |> 
  add_significance()

channel  %>%
  wilcox_test(channel_nonstate_other_mean ~ appeal, paired = TRUE) |> 
  add_significance()

# effect size
channel |> 
  rstatix::wilcox_effsize(channel_nonstate_mean ~ appeal,
                          paired = TRUE)
channel |> 
  rstatix::wilcox_effsize(channel_nonstate_ngo_mean ~ appeal,
                          paired = TRUE)

channel |> 
  rstatix::wilcox_effsize(channel_nonstate_other_mean ~ appeal,
                          paired = TRUE)
```

## Number of donors

```{r}
donor <- assignment |>
  filter(!is.na(disbursement)) |> 
  filter(sum(appeal_n, na.rm = T) != 0, .by = c(recipient_code, recipient_name)) |> 
  rename(appeal = appeal_n) |> 
  mutate(appeal = if_else(appeal != 0, "Yes", "No")) |>
  mutate(n_donor = n_distinct(donor_code), .by = c(recipient_code, recipient_name, year)) |> 
  summarize(
    n_donor_mean = mean(n_donor, na.rm = T),
    n_donor_median = median(n_donor, na.rm = T),
    .by = c(recipient_name, appeal)
  )
```

```{r}
donor |> 
  pivot_wider(id_cols = recipient_name,
              names_from = appeal, values_from = n_donor_median) |> 
  arrange(desc(Yes)) |> 
  mutate(recipient_name = fct_reorder(as.factor(recipient_name), No)) |> 
  ggplot() +
  geom_segment( aes(x=recipient_name, xend=recipient_name, y=No, yend=Yes), color="grey") +
  geom_point( aes(x=recipient_name, y=No), color="darkgrey", size=3 ) +
  geom_point( aes(x=recipient_name, y=Yes), color="orange", size=3 ) +
  coord_flip()+
  xlab("") +
  ylab("Number of donors") +
  theme_light()
```
