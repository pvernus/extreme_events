---
title: "Data analysis"
format: html
editor: visual
---

```{r load}
# packages
source(here::here('scripts', 'library.R'))
# data
load(here('data', 'data_oecd_crs_clean.RData'))
load(here('data', 'data_emdat_clean.RData'))
```

# 1. Unit-level: recipient-year

```{r}

## UNIT-LEVEL: recipient-year
sample_recipient <- data_crs |> 
  expand(nesting(recipient_id, recipient_name, cohort_recipient), year) |> 
  filter(!grepl("regional", recipient_name)) |> # remove "regional" recipients
  fmutate(universe = ifelse(cohort_recipient <= year, 1, 0)) |> 
  setDT()

## OECD CRS (outcome variables)
# select vars
data_recip.outcomes <- data_crs[, .(year, recipient_id, recipient_name, donor_id, donor_name, sector_id, sector_name, purpose_id = purpose_code, purpose_name, crs_id, usd_commitment_defl, channel_nonstate, channel_nonstate_ngo, channel_nonstate_multi, n_projects)
# summarize to get unit-level: recipient-year
][, .(
  commit = sum(usd_commitment_defl, na.rm = T),
  n_donors = uniqueN(donor_id[usd_commitment_defl != 0]),
  n_sectors = uniqueN(sector_id[usd_commitment_defl != 0]),
  n_purpose = uniqueN(purpose_id[usd_commitment_defl != 0]),
  n_projects = uniqueN(crs_id, na.rm = T),
  commit.channel_nonstate = sum(usd_commitment_defl[channel_nonstate=="1"], na.rm = T),
  commit.channel_nonstate_ngo = sum(usd_commitment_defl[channel_nonstate_ngo=="1"], na.rm = T),
  commit.channel_nonstate_multi = sum(usd_commitment_defl[channel_nonstate_multi=="1"], na.rm = T),
  sh_commit.channel_nonstate = sum(usd_commitment_defl[channel_nonstate=="1"], na.rm = T)/
                               sum(usd_commitment_defl, na.rm = T)*100,
  sh_commit.channel_nonstate_ngo = sum(usd_commitment_defl[channel_nonstate_ngo=="1"], na.rm = T)/
                               sum(usd_commitment_defl, na.rm = T)*100,
  sh_commit.channel_nonstate_multi = sum(usd_commitment_defl[channel_nonstate_multi=="1"], na.rm = T)/
                               sum(usd_commitment_defl, na.rm = T)*100,
  sh_proj.channel_nonstate = n_distinct(crs_id[channel_nonstate=="1"])/n_distinct(crs_id)*100,
  sh_proj.channel_nonstate_ngo = n_distinct(crs_id[channel_nonstate_ngo=="1"])/n_distinct(crs_id)*100,
  sh_proj.channel_nonstate_multi = n_distinct(crs_id[channel_nonstate_multi=="1"])/n_distinct(crs_id)*100
), .(recipient_id, year)
][order(recipient_id, year)
# add var on commitment per projects in recipient countries per year
][, commit_per_project := commit / n_projects]

# merge outcome data
data_outcomes <- merge(sample_recipient, data_recip.outcomes, by=c("recipient_id", "year"), all.x = TRUE) %>%
  arrange(recipient_id, year) %>%
  mutate(across(commit:commit_per_project, 
                ~ ifelse(universe == 1 & is.na(.), 0, .)))
  
```

# Treatment status

## Switching treatment only

```{r}
## EM-DAT (treatment)
# select vars of interest
recip_binary_treatment <- data_emdat[, .(recipient_id, 
                                        year = start_year, 
                                        clim_event, 
                                        treatment_all = switching_event_dummy, 
                                        treatment_appeal = switching_appeal_dummy)]
```

## Climate-related events only

```{r}

# filter for weather and climate events
recip_binary_climate_treatment <- recip_binary_treatment[clim_event == 1
# summarize to get unit-level: recipient-year
][, .(
  treat_all = max(treatment_all, na.rm = T),
  treat_appeal = max(treatment_appeal, na.rm = T)
), by = .(recipient_id, year)]

```

### Treatment status

```{r}

# merge treatment data
data_recip.binary_treatment <- merge(data_outcomes, recip_binary_climate_treatment, 
                                            by=c("recipient_id", "year"), 
                                            all.x = T) |> 
  mutate(across(starts_with("treat"), 
                ~ ifelse(universe == 1 & is.na(.), 0, .)),
         across(starts_with("treat"), 
                ~ ifelse(universe == 0, NA, .))
  )

```

```{r treatment_status}

# all events - binary
panelView::panelview(1 ~ treat_all, # 
          data = data_recip.binary_treatment, index = c("recipient_name","year"), 
          xlab = "Year", ylab = "Number of Countries",
          legend.labs = c("Control Recipients", 
                          "Treated Recipients",
                          "Missing"),
          main = "Treatment Status: all climate and weather events",
          by.timing = TRUE,
          collapse.history = "TRUE")

# international assistance call ("appeal") events - binary
panelView::panelview(1 ~ treat_appeal, # 
          data = data_recip.binary_treatment, index = c("recipient_name","year"), 
          xlab = "Year", ylab = "Number of Countries",
          legend.labs = c("Control Recipients", 
                          "Treated Recipients",
                          "Missing"),
          main = "Treatment Status: climate and weather events\nleading to an international call for assistance",
          by.timing = TRUE,
          collapse.history = "TRUE")

```

## Unique treatment only

-   Remove recipient countries with more than one "*appeal*" treatment period i.e. only keep countries with no or one treatment period where treatment is the occurrence of disaster leading to an call for international assistance.

```{r}

# sum number of treated years by recipient
names_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[, .( 
  treated_year_N = sum(treat_appeal, na.rm = T) # appeal only
), by = recipient_name
# order by number of treated years
][order(-treated_year_N)
# keep names of single-treated recipients
][treated_year_N == 1, recipient_name]
  
# remove recipients w/ more than one treated year
data_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[recipient_name %in% names_recip.appeal.binary_single_treatment, ]

# list single treated recipients
unique(data_recip.appeal.binary_single_treatment$recipient_name)

recip_binary_climate_treatment
```

### Treatment status

```{r}

# international assistance call ("appeal") events - binary
panelView::panelview(1 ~ treat_appeal, # 
          data = data_recip.appeal.binary_single_treatment, index = c("recipient_name","year"), 
          xlab = "Year", ylab = "Number of Countries",
          legend.labs = c("Control Recipients", 
                          "Treated Recipients",
                          "Missing"),
          main = "Treatment Status: unique climate and weather event\nleading to an international call for assistance",
          by.timing = TRUE,
          collapse.history = "TRUE")

```

# Outcome variables

## Commitments

### Total

```{r commitments}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  commit,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(commit, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = commit - lag1,
  ratio = commit / lag1
  )]

data <- between_periods_comparison[period %in% c(-5:5)]

# histogram
data |> 
  filter(ratio < 10) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = ratio, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  geom_vline(xintercept = 1, linetype="dashed", linewidth=1) + 
  scale_x_continuous(breaks = c(0, 1, 5, 10)) +
  theme_minimal() + 
  labs(title="Distribution of current/lag commitments ratio",
       subtitle = "Ratio < 1 = decrease in annual aid commitments",
       x="Commitments in period t / Commitments in period t-1",
       y="Period (treatment = 0)",
       caption="Remove outliers: ratio > 10")

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          ) |> 
  gt(caption = "Ratio commitments period t/t-1")

summarize(data,
          min=min(commit, na.rm = T),
          median=median(commit, na.rm = T),
          mean=mean(commit, na.rm = T),
          max=max(commit, na.rm = T),
          IQR=IQR(commit, na.rm = T),
          sd=sd(commit, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, commit, diff, period) |> 
  fmutate(commit = log10(commit),
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=commit, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(x="Period (treatment = 0)",
       y="Commitments (USD, Millions, log10)",
       color="Treatment status"
       )

# Outliers
# slice_min(data, diff, n=3, by = period) |> filter(period > 0)
# slice_max(data, diff, n=3, by = period) |> filter(period >= -1)

# All panel: commit
data |> 
  ggplot(aes(x=period, y=commit, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(x="Period (treatment = 0)",
       y="Commitments (USD, Millions, log10)",
       color="Treatment status"
       )

```

> Comments: 
- distribution doesn't change much across periods; 
- decrease in means and medians in t=0;
- no clear trend in post-disaster periods, increased variance partly due to outliers: three biggest absolute aid surges in t=0 are the three biggest drops in t=1 != Mexico: strong drop in t=0, then surge in t=1 & t=2; 
- some anticipation effect seems to occur in t=-1

### Non-state

#### Volume

```{r commit_nonstate}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = commit.channel_nonstate,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

data <- between_periods_comparison[period %in% c(-5:5)]

# histogram
data |> 
  filter(ratio < 10) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = ratio, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  geom_vline(xintercept = 1, linetype="dashed", linewidth=1) + 
  scale_x_continuous(breaks = c(0, 1, 5, 10)) +
  theme_minimal() + 
  labs(title="Ratio between current and lagged commitments to non-state actors",
       subtitle = "Ratio < 1 = decrease in annual aid commitments",
       x="Commitments in period t / Commitments in period t-1",
       y="Period (treatment = 0)",
       caption="Remove outliers: ratio > 10")

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(commit_nonstate = log10(outcome),
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Commitments to non-state actors",
    x="Period (treatment = 0)",
    y="Commitments (USD, Millions, log10)",
    color="Treatment status"
       )

# Outliers
# slice_min(data, diff, n=3, by = period) |> filter(period > 0)
# slice_max(data, diff, n=3, by = period) |> filter(period >= -1)

# All panel: commit
data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Commitments to non-state actors",
    x="Period (treatment = 0)",
    y="Commitments (USD, Millions, log10)",
    color="Treatment status"
       )

```

> Comments: (i) both increasing and decreasing cases, no clear explanation; (ii) some outliers, with stark increase in post-treatment commitments.

#### Share

```{r nonstate}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = sh_commit.channel_nonstate,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

# histogram
data |> 
  filter(ratio < 20) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = ratio, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  geom_vline(xintercept = 1, linetype="dashed", linewidth=1) + 
  theme_minimal() +
  labs(title="Ratio between current and lagged proportion of\ncommitments channelled through non-state actors",
       caption="Removed outliers: ratio > 20")

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(commit_nonstate = log10(outcome),
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Commitments to non-state actors",
    x="Period (treatment = 0)",
    y="Commitments (USD, Millions, log10)",
    color="Treatment status"
       )

# Outliers
# slice_min(data, diff, n=3, by = period) |> filter(period > 0)
# slice_max(data, diff, n=3, by = period) |> filter(period >= -1)

# All panel
data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Commitments to non-state actors",
    x="Period (treatment = 0)",
    y="Commitments (USD, Millions, log10)",
    color="Treatment status"
       )

```
> Comments: (i) significant increase in commitments to non-state actors in post-treatment periods; (ii) post-treatment, the proportion seems to increase over time.

## Donors

```{r n_donors}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = n_donors,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

# histogram
data |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = ratio, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  geom_vline(xintercept = 1, linetype="dashed", linewidth=1) + 
  theme_minimal()

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Number of donors",
    x="Period (treatment = 0)",
    y="# donors",
    color="Treatment status"
       )

data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Number of donors",
    x="Period (treatment = 0)",
    y="# donors",
    color="Treatment status"
       )

```

> Comments: (i) no significant change in median/mean; (ii) maximum number of donors increase in t=1 and t=2, which increase the variance.

## Sectors

```{r n_sectors}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = n_sectors,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

# histogram
data |> 
  filter(ratio < 2) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = outcome, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  theme_minimal()

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Number of sectors",
    x="Period (treatment = 0)",
    y="# sectors",
    color="Treatment status"
       )

data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Number of sectors",
    x="Period (treatment = 0)",
    y="# sectors",
    color="Treatment status"
       )

```

## Purposes

```{r n_sectors}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = n_purpose,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

# histogram
data |> 
  filter(ratio < 2) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = outcome, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  theme_minimal()

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Number of purposes",
    x="Period (treatment = 0)",
    y="# purposes",
    color="Treatment status"
       )

data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Number of purposes",
    x="Period (treatment = 0)",
    y="# purposes",
    color="Treatment status"
       )

```

## Projects

### Number

```{r n_projects}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = n_projects,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

# histogram
data |> 
  filter(ratio < 2) |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = outcome, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3, stat = "binline") +
  scale_fill_manual(values=c("grey", "coral")) +
  geom_vline(xintercept = 1, linetype="dashed", linewidth=1) + 
  theme_minimal() +
  labs(x="# of projects")

summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

# lines: absolute value
data |> 
  select(recipient_id, outcome, diff, period) |> 
  fmutate(
          period = factor(period),
          treatment = ifelse(period %in% c(-1:0), "Treatment", "Control")
         ) |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="slategray4", linewidth=1) +
  geom_point(color="grey80") +
  geom_line(aes(color=treatment)) +
  scale_color_manual(values = c("gray70", "coral")) +
  theme_minimal() +
  labs(
    title="Number of projects",
    x="Period (treatment = 0)",
    y="# projects",
    color="Treatment status"
       )

data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Number of projects",
    x="Period (treatment = 0)",
    y="# projects",
    color="Treatment status"
       )

```

### Size

```{r size_projects}

# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  outcome = commit_per_project,
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, `:=` (
  diff = outcome - lag1,
  ratio = outcome / lag1
  )]

# head(between_periods_comparison)

data <- between_periods_comparison[period %in% c(-5:5)]

# head(data)
# data |> arrange(-diff)

## LEVELS
# histogram
data |> 
  mutate(period = factor(period, levels=c("5", "4", "3", "2", "1", "0", "-1", "-2", "-3", "-4", "-5")),
         treatment=ifelse(period==0,"Treatment","Control")) |> 
  ggplot(aes(x = outcome, y = period, fill=treatment)) +
  geom_density_ridges(alpha=0.3) +
  scale_fill_manual(values=c("grey", "coral")) +
  theme_minimal() +
  labs(
    title="Project sizes",
    x="Commitment per project"
    )
# table
summarize(data,
          min=min(outcome, na.rm = T),
          median=median(outcome, na.rm = T),
          mean=mean(outcome, na.rm = T),
          max=max(outcome, na.rm = T),
          IQR=IQR(outcome, na.rm = T),
          sd=sd(outcome, na.rm = T),
          .by = period
          )

## VARIATIONS
# table
summarize(data,
          n=length(recipient_id),
          min=round(min(ratio, na.rm = T), 3),
          median=round(median(ratio, na.rm = T), 3),
          mean=round(mean(ratio, na.rm = T), 3),
          max=round(max(ratio, na.rm = T), 3),
          .by = period
          )

# All panel
data |> 
  ggplot(aes(x=period, y=outcome, group=recipient_id)) +
  geom_vline(xintercept = 0, linetype="dashed", color="coral", linewidth=1) +
  geom_line() +
  facet_wrap(~ recipient_name, scales = "free_y") +
  theme_minimal() +
  labs(
    title="Project sizes",
    x="Period (treatment = 0)",
    y="Commitments per project (USD, Millions)",
    color="Treatment status"
       )

```

```{r}
# bivariate
# x=ratio commitments, y=ratio % nonstate, by=period

# select relevant vars
data <- data_recip.appeal.binary_single_treatment[, .(
  recipient_id, recipient_name,
  year,
  commit, sh_commit.channel_nonstate, 
  treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations 
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, `:=` (
  lag1.commit = shift(commit, type = "lag"),
  lag1.sh_nonstate = shift(sh_commit.channel_nonstate, type = "lag")
), by = recipient_id
# create new var `diff`
][, `:=` (
  ratio.commit = commit / lag1.commit,
  ratio.sh_nonstate = sh_commit.channel_nonstate / lag1.sh_nonstate
  )
][period %in% c(-5:5)]

data

data |> 
  filter(ratio.commit < 5) |> 
  filter(ratio.sh_nonstate < 5) |>
  ggplot(aes(x=ratio.sh_nonstate, y=ratio.commit)) +
  geom_point() +
  geom_smooth(method = 'gam', se = TRUE) +
  geom_vline(xintercept = 1, linetype="dashed") +
  geom_hline(yintercept = 1, linetype="dashed") +
  facet_wrap(~ period) +
  theme_minimal()

```

> Comment: small negative relationship between the variations of overall commitments and the share of commitments going to nonstate actors, i.e. increase in the volume of commitments leads to a decrease in the share of commitments to nonstate actors.

# 2. Unit-level: donor-recipient-year

```{r}

## UNIT-LEVEL: donor-recipient-year
# Define full sample
sample_dyad <- data_crs |> 
  expand(nesting(donor_id, donor_name, cohort_donor),
         nesting(recipient_id, recipient_name, cohort_recipient), 
         year) |> 
  filter(!grepl("regional", recipient_name)) |> # remove "regional" recipients
  fmutate(universe = ifelse(cohort_donor <= year & cohort_recipient <= year, 1, 0)) |> # 
  setDT()

## OECD CRS (outcome variables)
# select vars
data_dyad.vars <- data_crs[, .(year, donor_id, recipient_id, sector_id, sector_name, purpose_id = purpose_code, purpose_name, crs_id, usd_commitment_defl, channel_nonstate, channel_nonstate_ngo, channel_nonstate_multi, n_projects)]
# descriptive stats
summary(data_dyad.vars)
# check for negative commitments
data_dyad.vars |> 
  filter(usd_commitment_defl < 0)  # 173 obs. have negative commitments
#  distinct(donor_id) |>  # from 5 donors
#  distinct(recipient_id) # from 65 recipients

# summarize to get unit-level: donor-recipient-year
data_dyad.outcomes <- data_dyad.vars[, .(
# Intensive margin  
# Total commitments
  commitment = sum(usd_commitment_defl, na.rm = T),
# Commitments by channel type  
  commit.channel_nonstate = sum(usd_commitment_defl[channel_nonstate=="1"], na.rm = T),
  commit.channel_nonstate_ngo = sum(usd_commitment_defl[channel_nonstate_ngo=="1"], na.rm = T),
  commit.channel_nonstate_multi = sum(usd_commitment_defl[channel_nonstate_multi=="1"], na.rm = T),
# Extensive margin
  n_sector = n_distinct(sector_id[usd_commitment_defl > 0]),
  n_purpose = n_distinct(purpose_id[usd_commitment_defl > 0]),
  n_projects = n_distinct(crs_id[usd_commitment_defl > 0], na.rm = T)
), .(donor_id, recipient_id, year)
][, size_projects := ifelse(commitment > 0, commitment / n_projects, 0)] # Size of projects

data_dyad.outcomes |> 
  filter(commitment < 0)
# Note: once aggregated at the donor-recipient dyad level, there is only one observation with a small negative commitments

## MERGE full sample with outcome variables
data_outcomes <- merge(sample_dyad, data_dyad.outcomes, 
                       by=c("donor_id", "recipient_id", "year"), 
                       all.x = TRUE) |> 
  arrange(recipient_id, year) |> 
  mutate(across(starts_with("commit"), ~ ifelse(. < 0, 0, .))) |> # one obs. has negative commitments (-0.31), convert to zero 
  mutate(across(starts_with("commit"), ~ ifelse(universe == 1 & is.na(.), 0, .))) |> # specify "real" zeroes, i.e., null values for existing dyads
  select(-starts_with("cohort"))

summary(data_outcomes)

data_outcomes |> 
  slice_min(n_purpose, n=5)

```

# Treatment status

## Switching and unique treatment only

```{r}
# Treatment
data_treatment <- data_recip.appeal.binary_single_treatment[, .(recipient_id, year, treat_all, treat_appeal)]

data_treatment <- rename(data_treatment, treatment = treat_appeal)

summary(data_treatment)

```

# Outcome variables

```{r}
# Merge outcomes with treatment data
# remove 
data_dyad <- merge(data_outcomes, data_treatment, by = c("recipient_id", "year"), all.x = T)[order(recipient_id, donor_id, year),][!is.na(treatment),]

summary(data_dyad)
```

## Commitments

### Total

```{r commitments}

# select vars
between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             outcome = commitment, 
                                                             treatment)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Total commitments",
       subtitle="Level: donor-recipient dyad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

### Non-State

```{r}
 
# select vars
between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             outcome = commit.channel_nonstate, 
                                                             treatment)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)


## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Commitments trough non-State channels",
       subtitle="Level: donor-recipient dyad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

#### NGO

```{r}

# select vars
between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             outcome = commit.channel_nonstate_ngo, 
                                                             treatment)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Commitments trough NGOs",
       subtitle="Level: donor-recipient dyad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

#### Multilaterals

```{r}

# select vars
between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             outcome = commit.channel_nonstate_multi, 
                                                             treatment)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Commitments trough Multilaterals",
       subtitle="Level: donor-recipient dyad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```


## Share of non-State

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := case_when(
  is.na(commitment) ~ NA,
  commitment == 0 ~ 0,
  !is.na(commitment) & commitment > 0 ~ sum(commit.channel_nonstate, na.rm = T)/sum(commitment, na.rm = T) * 100
), by = .(donor_id, recipient_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Share of commitments delivered through non-State channels",
       subtitle="Level: donor-recipient dyad",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Group by

### Donor type

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := ifelse(
    commitment > 0,
    sum(commit.channel_nonstate, na.rm = T)/sum(commitment, na.rm = T) * 100,
    NA), by = .(donor_id, recipient_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

# add donor type variable
facet_donor <- left_join(between_periods_comparison,
      data_crs |> 
        distinct(donor_id, bi_multi) |> 
        filter(!(donor_id %in% c("0003", "0075") & bi_multi=="Private Sector")),
      by = "donor_id"
      ) |> 
  relocate(bi_multi, .after = donor_name)

data <- facet_donor |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)


## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = c("bi_multi", "period"),
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  facet_wrap(~bi_multi) +
  theme_minimal() +
  labs(title="Share of commitments delivered through non-State channels",
       subtitle="Level: donor-recipient dyad",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

### Recipient income group

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := ifelse(
    commitment > 0,
    sum(commit.channel_nonstate, na.rm = T)/sum(commitment, na.rm = T) * 100,
    NA), by = .(donor_id, recipient_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

# add recipient income group variable
facet_recip <- left_join(between_periods_comparison,
                         data_crs |> distinct(recipient_id, incomegroup_name),
                         by = "recipient_id") |> 
  relocate(incomegroup_name, .after = recipient_name)

data <- facet_recip |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = c("incomegroup_name", "period"),
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  facet_wrap(~incomegroup_name) +
  theme_minimal() +
  labs(title="Share of commitments delivered through non-State channels",
       subtitle="Level: donor-recipient dyad. Grouped by recipients' income groups",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Channel of delivery

### NGOs

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate_ngo
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := ifelse(
    commitment > 0,
    sum(commit.channel_nonstate_ngo, na.rm = T)/sum(commitment, na.rm = T) * 100,
    NA), by = .(donor_id, recipient_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Share of commitments delivered through NGOs",
       subtitle="Level: donor-recipient dyad",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

### Multilaterals

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate_multi
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := ifelse(
    commitment > 0,
    sum(commit.channel_nonstate_multi, na.rm = T)/sum(commitment, na.rm = T) * 100,
    NA), by = .(donor_id, recipient_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Share of commitments delivered through Multilaterals",
       subtitle="Level: donor-recipient dyad",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Number of projects

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             outcome = n_projects
                                                             )
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Number of projects",
       subtitle="Level: donor-recipient dyad",
       y="# projects",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Size of projects

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             outcome = size_projects
                                                             )
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]
  
data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Average size of projects",
       subtitle="Level: donor-recipient dyad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Number of sectors

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             outcome = n_sector
                                                             )
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Average number of sectors",
       subtitle="Level: donor-recipient dyad",
       y="# sectors",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```


## Number of purposes

```{r}

between_periods_comparison <- copy(data_dyad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             year, 
                                                             treatment,
                                                             outcome = n_purpose
                                                             )
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Average number of sub-sectors",
       subtitle="Level: donor-recipient dyad",
       y="# sub-sectors (purposes)",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

# 3. Unit-level: donor-recipient-sector-year

```{r}

## UNIT-LEVEL: donor-recipient-sector-year
# Define full sample
sample_tryad <- data_crs |> 
  expand(nesting(donor_id, donor_name, cohort_donor),
         nesting(recipient_id, recipient_name, cohort_recipient),
         nesting(sector_id, sector_name),
         year) |> 
  filter(!grepl("regional", recipient_name)) |> # remove "regional" recipients
  fmutate(universe = ifelse(cohort_donor <= year & cohort_recipient <= year, 1, 0)) |> # 
  setDT()

## OECD CRS (outcome variables)
# select vars
data_tryad.vars <- data_crs[, .(year, donor_id, recipient_id, sector_id, purpose_id = purpose_code, crs_id, usd_commitment_defl, channel_nonstate, channel_nonstate_ngo, channel_nonstate_multi, n_projects)]

# summarize to get unit-level: donor-recipient-year
data_tryad.outcomes <- data_tryad.vars[, .(
# Intensive margin  
# Total commitments
  commitment = sum(usd_commitment_defl, na.rm = T),
# Commitments by channel type  
  commit.channel_nonstate = sum(usd_commitment_defl[channel_nonstate=="1"], na.rm = T),
  commit.channel_nonstate_ngo = sum(usd_commitment_defl[channel_nonstate_ngo=="1"], na.rm = T),
  commit.channel_nonstate_multi = sum(usd_commitment_defl[channel_nonstate_multi=="1"], na.rm = T),
# Extensive margin
  n_sector = n_distinct(sector_id[usd_commitment_defl > 0]),
  n_purpose = n_distinct(purpose_id[usd_commitment_defl > 0]),
  n_projects = n_distinct(crs_id[usd_commitment_defl > 0], na.rm = T)
), .(donor_id, recipient_id, sector_id, year)
][, size_projects := ifelse(commitment > 0, commitment / n_projects, 0)] # Size of projects

data_tryad.outcomes |> 
  filter(commitment < 0)
# Note: once aggregated at the donor-recipient dyad level, there are 31 observations with only small negative commitments

## MERGE full sample with outcome variables
data_outcomes <- merge(sample_tryad, data_tryad.outcomes, 
                       by=c("donor_id", "recipient_id", "sector_id", "year"), 
                       all.x = TRUE) |> 
  arrange(recipient_id, year) |> 
  mutate(across(starts_with("commit"), ~ ifelse(. < 0, 0, .))) |> # convert negative commit to zero 
  mutate(across(starts_with("commit"), ~ ifelse(universe == 1 & is.na(.), 0, .))) |> # specify "real" zeroes, i.e., null values for existing tryads
  select(-starts_with("cohort"))

summary(data_outcomes)

data_outcomes |> 
  slice_min(n_purpose, n=5)

```

# Treatment status

## Switching and unique treatment only

```{r}
# Treatment
data_treatment <- data_recip.appeal.binary_single_treatment[, .(recipient_id, year, treat_all, treat_appeal)]

data_treatment <- rename(data_treatment, treatment = treat_appeal)

summary(data_treatment)

```

# Outcome variables

```{r}
# Merge outcomes with treatment data
# remove 
data_tryad <- merge(data_outcomes, data_treatment, by = c("recipient_id", "year"), all.x = T)[order(recipient_id, donor_id, year),][!is.na(treatment),]

summary(data_tryad)

data_tryad |> 
  filter(n_sector > 1)

```

## Commitments through non-State channels

```{r}

# select vars
between_periods_comparison <- copy(data_tryad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             sector_id, sector_name,
                                                             year, 
                                                             outcome = commit.channel_nonstate, 
                                                             treatment)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id, sector_id)]

data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sector_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)


## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Commitments trough non-State channels",
       subtitle="Level: donor-recipient-sector tryad",
       y="Millions, USD",
       caption="Note: method from Morey (2008) is used for within-subjects comparison. Conf. int. = .95")

```

## Share of commitments through non-State channels

```{r}

between_periods_comparison <- copy(data_tryad)
between_periods_comparison <- between_periods_comparison[, .(donor_id, donor_name, 
                                                             recipient_id, recipient_name, 
                                                             sector_id, sector_name,
                                                             year, 
                                                             treatment,
                                                             commitment, commit.channel_nonstate
                                                             )
# create new variable : share of non-State commitments in total commitments
][, outcome := case_when(
  is.na(commitment) ~ NA,
  commitment == 0 ~ 0,
  !is.na(commitment) & commitment > 0 ~ sum(commit.channel_nonstate, na.rm = T)/sum(commitment, na.rm = T) * 100
), by = .(donor_id, recipient_id, sector_id, year)
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = .(donor_id, recipient_id, sector_id)]


data <- between_periods_comparison |> 
  fmutate(
  group = paste(donor_id, recipient_id, sep = "_"),
  period = factor(period),
  outcome = outcome
  ) |> 
  filter(period %in% c(-3:3)) |> 
  filter(!length(group) < 7, .by = group)

## Level trend
dat_summary <- Rmisc::summarySEwithin(data,
                 measurevar = "outcome",
                 withinvars = "period",
                 idvar = "group",
                 na.rm = TRUE)

ggplot(dat_summary, aes(x = period, y = outcome)) + 
  geom_point(color = "black") +
  geom_errorbar(aes(y = outcome, ymin = outcome - ci, ymax = outcome + ci),
                    color = "black", width = 0.05) +
  theme_minimal() +
  labs(title="Share of commitments delivered through non-State channels",
       subtitle="Level: donor-recipient-sector tryad",
       y="%",
       caption="Note: method from Morey (2008) is used for within-subjects comparison Conf. int. = .95")

```


- Both at dyad and tryad levels, increased trend in commitments delivered through non-State channels AND constant positive trend in the share of commitments delivered through non-State channels.

