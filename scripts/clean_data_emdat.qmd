---
title: "EM-DAT"
format: docx
editor: visual
---

```{r load_pckgs}

source(here::here('scripts', 'library.R'))
```

# EM-DAT data

```{r import_raw_data_em_dat}
load(here("data", "data_emdat_raw.RData"))
data_emdat <- setDT(data_emdat_raw)
```

[@delforge2023]

## Inclusion criteria

At least one must be fulfilled:

-   10 or more human deaths;

-   100 or more people injured or left homeless;

-   declaration by the country of a state of emergency and/or an appeal for international assistance.

## Event classification

**Natural**, incl.

-   Biological;

-   **Climatological**, incl.

    -   **Drought**

    -   Glacial lake outburst flood \<-- include in flood category (n=3)?

    -   Wildfire

-   Extra-terrestrial;

-   Geophysical;

-   **Hydrological,** incl.

    -   **Flood**;

    -   Mass movement (wet);

    -   Wave action;

-   **Meteorological**, incl.

    -   **Extreme temperature**;

    -   Fog;

    -   **Storm**;

-   Technological, incl.

    -   Miscellaneous accident;

    -   Transport.

# Sample

```{r}
# restrict to events which have occurred since 2000
data_emdat.start_year <- data_emdat |> 
  filter(start_year >= 2000)
```

> Note: how to deal with disaster which happened at the end of the year? Attribute to next year when happening after september? Later?
> Note: how to deal with observations which have different years for the dis_no and start_year? 

# Climate and Weather Extreme Events

Source: [@ipcc2023]

-   temperature extremes;

-   heavy precipitation;

-   pluvial floods;

-   river floods;

-   drought;

-   storms (including tropical cyclones);

-   compound events (multivariate and concurrent extremes)

```{r}

# add dummy for weather and climate events
data_emdat.clim_event <- data_emdat.start_year |> 
  fmutate(clim_event = ifelse(grepl('nat-cli-dro|nat-hyd-flo|nat-met-ext|nat-met-sto', classification_key),1,0)) |>
  relocate(clim_event, .after = classification_key)

```

# Treatment assignment by country

## Total and cumulative number of events

```{r}

# add vars on the number of events
data_emdat.count <- data_emdat.clim_event[, `:=` ( # Number of events per year
  event_n = .N, 
  appeal_n = sum(appeal == "Yes", na.rm = T)
  ), 
  by = .(country, recipient_id, start_year, end_year)
][order(country, start_year)
][,`:=` ( # Cumulative number of events each year
  event_cum = cumsum(event_n),
  appeal_cum = cumsum(appeal_n)
  ),
  by = .(country, recipient_id)
]

```

## Single and switching treatment "dummy" variables

```{r}

data_emdat.dummy <- data_emdat.count |> 
  fmutate(
    switching_event_dummy = ifelse(event_n %in% c(0,NA), 0, 1),
    switching_appeal_dummy = ifelse(appeal_n %in% c(0,NA), 0, 1),
    single_event_dummy = ifelse(switching_event_dummy == 0 & event_cum == 0, 0, 1),
    single_appeal_dummy = ifelse(switching_appeal_dummy == 0 & appeal_cum == 0, 0, 1)
  )
```

## Treatment cohort

```{r}

data_emdat.cohort <- data_emdat.dummy |> 
  fgroup_by(recipient_id) |> 
  fmutate(
    cohort_event = if_else(sum(appeal_cum, na.rm = T) == 0, NA_integer_, 
                           min(start_year[event_cum != 0], na.rm = T)),
    cohort_appeal = if_else(sum(appeal_cum, na.rm = T) == 0, NA_integer_, 
                            min(start_year[appeal_cum != 0], na.rm = T))
  ) |> 
  ungroup()
```

# Save

```{r}
data_emdat <- copy(data_emdat.dummy)
save(key_emdat, data_emdat, file = here('data', 'data_emdat_clean.RData'))
rm(data_emdat_raw, data_emdat.start_year, data_emdat.dummy, data_emdat.count, data_emdat.cohort, data_emdat.clim_event)
```
