assignment <- assignment |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(starts_with("id"), .before = year)
# outcome
assignment |>
select(commitment, disbursement, commit_xmarg, disb_xmarg) |>
summary()
# mediator
assignment |>
select(starts_with("channel")) |>
summary()
# treatment
assignment |>
select(event_n:declaration_binary) |>
summary()
# create new channel-related vars: share of commitments going through nonstate, (nonstate) ngo, and other nonstate actors
mediator_dyad_year <- data_disaster[, .(
sh_nonstate = sum(usd_commitment_defl[channel_bypass_ngo != "No"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_ngo = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (NGO)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_other = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (Other)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T)
),
by = .(donor_code, donor_name, recipient_code, recipient_name, year)]
sample_n(mediator_dyad_year, 5)
# missing data
vis_miss(mediator_dyad_year)
# observations with missing
mediator_dyad_year |>
filter(is.na(sh_nonstate))
# missing data are due to observations with commitments valued as '0'
data_disaster |>
filter((donor_code == "0005" & recipient_code == "0228") & year == 2006)
# replace NaN to zeroes
mediator_dyad_year <- mediator_dyad_year |>
mutate(across(starts_with("sh_"), \(x) replace_na(x, 0)))
mediator_dyad_year |>
pivot_longer(-c(donor_code, donor_name, recipient_code, recipient_name, year),
names_to = "channel", values_to = "share") |>
ggplot(aes(x = share, color = channel)) +
geom_density() +
theme_minimal()
mediator <- mediator_dyad_year[, `:=` (
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
)
][, c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"):=NULL]
rm(data)
sample_n(mediator, 5)
summary(mediator[,6:8])
mediator_dyad_year |>
mutate(
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
) |>
select(-c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"))
# create new channel-related vars: share of commitments going through nonstate, (nonstate) ngo, and other nonstate actors
mediator_dyad_year <- data_disaster[, .(
sh_nonstate = sum(usd_commitment_defl[channel_bypass_ngo != "No"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_ngo = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (NGO)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_other = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (Other)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T)
),
by = .(donor_code, donor_name, recipient_code, recipient_name, year)]
sample_n(mediator_dyad_year, 5)
# replace NaN to zeroes
mediator_dyad_year <- mediator_dyad_year |>
mutate(across(starts_with("sh_"), \(x) replace_na(x, 0)))
mediator_dyad_year |>
mutate(
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
) |>
select(-c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"))
mediator <- mediator_dyad_year |>
mutate(
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
) |>
select(-c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"))
# unique identifiers (key)
mediator <- mediator |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(year, .before = donor_code) |>
relocate(starts_with("id"), .before = year)
setDT(mediator, key = c("id", "id_year"))
head(mediator)
# merge
estimand_mediator <- merge(estimand,
mediator |> select(id_year, starts_with("channel_nonstate")),
all.x = TRUE)
# replace NAs w/ zeroes when aid flows are zeroes (!= NAs)
estimand_mediator <- estimand_mediator |>
mutate(across(starts_with("channel"), \(x) ifelse(dummy_universe == 1, replace_na(0), x)))
setDT(em_dat)
# filter climate-related disasters only
event_clim_sample <-  em_dat[grepl('nat-cli-dro|nat-hyd-flo|nat-met-ext|nat-met-sto', classification_key)]
vis_dat(event_clim_sample)
vis_miss(event_clim_sample)
# create new vars
## event_n: number of event(s) per year in each country.
## call_n: number of event(s) per year in each country where international assistance was requested or a state of emergency was declared.
## appeal_n: number of event(s) per year in each country where international assistance was requested.
## declaration_n: number of event(s) per year in each country where a state of emergency was declared.
## event_cum: cumulative number of events in each country since 2002 (start year of the CRS data set)
treatment <- event_clim_sample[year >= 2002
][, .( # Number of events
event_n = .N,
call_n = sum(call == "Yes"),
appeal_n = sum(call_type == "Appeal"),
declaration_n = sum(call_type == "Declaration")
),
by = .(country, iso, year)
][order(country, year)
][,`:=` ( # Cumulative number of events since 2002
event_cum = cumsum(event_n),
call_cum = cumsum(call_n),
appeal_cum = cumsum(appeal_n),
declaration_cum = cumsum(declaration_n)
),
by = .(country, iso)
]
# missing in em_dat / treatment data set: Nauru, Wallis and Futuna, Kosovo, Côte d'Ivoire, Tanzania, West Bank and Gaza Strip, China (People's Republic of), Bolivia, Venezuela, Iran, Micronesia, Mayotte
# first, we merge the iso variable from the treatment data set to the estimand data set.
estimand_mediator_iso <- left_join(estimand_mediator, distinct(em_dat, country, iso),
by = c("recipient_name" = "country")) |>
mutate(iso = case_when( # we add the missing ISO
recipient_name == "Côte d'Ivoire" ~ 'CIV',
recipient_name == "Moldova" ~ 'MDA',
recipient_name == "Tanzania" ~ 'TZA',
recipient_name == "China (People's Republic of)" ~ 'CHN',
recipient_name == "Bolivia" ~ 'BOL',
recipient_name == "Venezuela" ~ 'VEN',
recipient_name == "Iran" ~ 'IRN',
recipient_name == "Kosovo" ~ 'XKX',
recipient_name == "Mayotte" ~ 'MYT',
recipient_name == "Micronesia" ~ 'FSM',
recipient_name == "Nauru" ~ 'NRU',
recipient_name == "Wallis and Futuna" ~ 'WLF',
recipient_name == "West Bank and Gaza Strip" ~ 'PSE',
# we also add the ISO of three recipient countries with no observation in the em-dat (treatment) data set
recipient_name == "Equatorial Guinea" ~ 'GNQ',
recipient_name == "Montserrat" ~ 'MSR',
recipient_name == "Turkmenistan" ~ 'TKM',
.default = iso
)) |>
relocate(iso, .after = recipient_name)
# missing data
estimand_mediator_iso |>
sample_n(5000) |>
vis_miss()
estimand_mediator_treatment <- merge(estimand_mediator_iso, treatment[, !'country'], by = c("iso", "year"), all.x = T) |> select(-iso)
head(estimand_mediator_treatment)
rm(estimand_mediator_iso)
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(across(event_n:declaration_cum, \(x) ifelse(dummy_universe == 1, replace_na(0), x)))
estimand_mediator_treatment |> sample_n(1000) |> vis_miss()
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
event_binary = ifelse(event_n %in% c(0,NA), 0, 1),
call_binary = ifelse(call_n %in% c(0,NA), 0, 1),
appeal_binary = ifelse(appeal_n %in% c(0,NA), 0, 1),
declaration_binary = ifelse(declaration_n %in% c(0,NA), 0, 1)
)
# cohort: year where the cumulative number of disasters is the lowest but different from zero
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
cohort_event = if_else(sum(event_cum, na.rm = T) == 0, NA_integer_, min(year[event_cum != 0], na.rm = T)),
cohort_call = if_else(sum(call_cum, na.rm = T) == 0, NA_integer_, min(year[call_cum != 0], na.rm = T)),
cohort_appeal = if_else(sum(appeal_cum, na.rm = T) == 0, NA_integer_, min(year[appeal_cum != 0], na.rm = T)),
cohort_declaration = if_else(sum(declaration_cum, na.rm = T) == 0, NA_integer_, min(year[declaration_cum != 0], na.rm = T)),
.by = recipient_code
)
# convert to factors
assignment <- mutate(estimand_mediator_treatment, across(ends_with('binary'), as_factor))
assignment <- assignment |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(starts_with("id"), .before = year)
# mediator
assignment |>
select(starts_with("channel")) |>
summary()
# create new channel-related vars: share of commitments going through nonstate, (nonstate) ngo, and other nonstate actors
mediator_dyad_year <- data_disaster[, .(
sh_nonstate = sum(usd_commitment_defl[channel_bypass_ngo != "No"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_ngo = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (NGO)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T),
sh_nonstate_other = sum(usd_commitment_defl[channel_bypass_ngo == "Yes (Other)"], na.rm = T) / sum(usd_commitment_defl, na.rm = T)
),
by = .(donor_code, donor_name, recipient_code, recipient_name, year)]
sample_n(mediator_dyad_year, 5)
summary(mediator_dyad_year[, 6:8])
# replace NaN to zeroes
mediator_dyad_year <- mediator_dyad_year |>
mutate(across(starts_with("sh_"), \(x) replace_na(x, 0)))
summary(mediator_dyad_year)
summary(mediator_dyad_year[6:8])
summary(mediator_dyad_year[, 5:8])
summary(mediator_dyad_year[, 6:8])
mediator_dyad_year |>
mutate(
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
) |>
select(-c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"))
mediator <- mediator_dyad_year |>
mutate(
channel_nonstate = ifelse(sh_nonstate > mean(sh_nonstate,na.rm = T), 1, 0),
channel_nonstate_ngo = ifelse(sh_nonstate_ngo > mean(sh_nonstate_ngo,na.rm = T), 1, 0),
channel_nonstate_other = ifelse(sh_nonstate_other > mean(sh_nonstate_other,na.rm = T), 1, 0)
) |>
select(-c("sh_nonstate", "sh_nonstate_ngo", "sh_nonstate_other"))
rm(data)
sample_n(mediator, 5)
summary(mediator[,6:8])
# unique identifiers (key)
mediator <- mediator |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(year, .before = donor_code) |>
relocate(starts_with("id"), .before = year)
setDT(mediator, key = c("id", "id_year"))
head(mediator)
# merge
estimand_mediator <- merge(estimand,
mediator |> select(id_year, starts_with("channel_nonstate")),
all.x = TRUE)
head(estimand_mediator)
summary(estimand_mediator)
estimand_mediator |>
mutate(across(starts_with("channel"), \(x) ifelse(is.na(x) & dummy_universe == 1, replace_na(0), x)))
# merge
estimand_mediator <- merge(estimand,
mediator |> select(id_year, starts_with("channel_nonstate")),
all.x = TRUE)
head(estimand_mediator)
summary(estimand_mediator)
# replace NAs w/ zeroes when aid flows are zeroes (!= NAs)
estimand_mediator <- estimand_mediator |>
mutate(across(starts_with("channel"), \(x) ifelse(is.na(x) & dummy_universe == 1, replace_na(0), x)))
summary(estimand_mediator)
summary(estimand_mediator[, 6:8])
head(estimand_mediator)
# missing in em_dat / treatment data set: Nauru, Wallis and Futuna, Kosovo, Côte d'Ivoire, Tanzania, West Bank and Gaza Strip, China (People's Republic of), Bolivia, Venezuela, Iran, Micronesia, Mayotte
# first, we merge the iso variable from the treatment data set to the estimand data set.
estimand_mediator_iso <- left_join(estimand_mediator, distinct(em_dat, country, iso),
by = c("recipient_name" = "country")) |>
mutate(iso = case_when( # we add the missing ISO
recipient_name == "Côte d'Ivoire" ~ 'CIV',
recipient_name == "Moldova" ~ 'MDA',
recipient_name == "Tanzania" ~ 'TZA',
recipient_name == "China (People's Republic of)" ~ 'CHN',
recipient_name == "Bolivia" ~ 'BOL',
recipient_name == "Venezuela" ~ 'VEN',
recipient_name == "Iran" ~ 'IRN',
recipient_name == "Kosovo" ~ 'XKX',
recipient_name == "Mayotte" ~ 'MYT',
recipient_name == "Micronesia" ~ 'FSM',
recipient_name == "Nauru" ~ 'NRU',
recipient_name == "Wallis and Futuna" ~ 'WLF',
recipient_name == "West Bank and Gaza Strip" ~ 'PSE',
# we also add the ISO of three recipient countries with no observation in the em-dat (treatment) data set
recipient_name == "Equatorial Guinea" ~ 'GNQ',
recipient_name == "Montserrat" ~ 'MSR',
recipient_name == "Turkmenistan" ~ 'TKM',
.default = iso
)) |>
relocate(iso, .after = recipient_name)
# missing data
estimand_mediator_iso |>
sample_n(5000) |>
vis_miss()
estimand_mediator_treatment <- merge(estimand_mediator_iso, treatment[, !'country'], by = c("iso", "year"), all.x = T) |> select(-iso)
head(estimand_mediator_treatment)
rm(estimand_mediator_iso)
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(across(event_n:declaration_cum, \(x) ifelse(dummy_universe == 1, replace_na(0), x)))
estimand_mediator_treatment |> sample_n(1000) |> vis_miss()
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
event_binary = ifelse(event_n %in% c(0,NA), 0, 1),
call_binary = ifelse(call_n %in% c(0,NA), 0, 1),
appeal_binary = ifelse(appeal_n %in% c(0,NA), 0, 1),
declaration_binary = ifelse(declaration_n %in% c(0,NA), 0, 1)
)
# cohort: year where the cumulative number of disasters is the lowest but different from zero
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
cohort_event = if_else(sum(event_cum, na.rm = T) == 0, NA_integer_, min(year[event_cum != 0], na.rm = T)),
cohort_call = if_else(sum(call_cum, na.rm = T) == 0, NA_integer_, min(year[call_cum != 0], na.rm = T)),
cohort_appeal = if_else(sum(appeal_cum, na.rm = T) == 0, NA_integer_, min(year[appeal_cum != 0], na.rm = T)),
cohort_declaration = if_else(sum(declaration_cum, na.rm = T) == 0, NA_integer_, min(year[declaration_cum != 0], na.rm = T)),
.by = recipient_code
)
# convert to factors
assignment <- mutate(estimand_mediator_treatment, across(ends_with('binary'), as_factor))
assignment <- assignment |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(starts_with("id"), .before = year)
# outcome
assignment |>
select(commitment, disbursement, commit_xmarg, disb_xmarg) |>
summary()
# mediator
assignment |>
select(starts_with("channel")) |>
summary()
# treatment
assignment |>
select(event_n:declaration_binary) |>
summary()
summarize(assignment,
disb = sum(commitment, na.rm = T),
.by = c(recipient_name, year, event_binary)) |>
ggplot(aes(x = event_binary, y = log(disb), colour = event_binary)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "none") +
labs(x="Treatment", y=" Commitment, MUSD (log)",
title = "Yearly commitments to recipient countries",
subtitle = "Treatment: at least one climate-related disaster recorded during the year")
summarize(assignment,
disb = sum(commitment, na.rm = T),
.by = c(recipient_name, year, event_binary))
summarize(assignment,
commit = sum(commitment, na.rm = T),
.by = c(recipient_name, year, event_binary)) |>
filter(event_binary == 1)
summarize(assignment,
commit = sum(commitment, na.rm = T),
.by = event_binary)
View(assignment)
assignement |>
filter(!is.na(commitment) & event_n !=0)
assignment |>
filter(!is.na(commitment) & event_n !=0)
assignment |>
filter(is.na(commitment) & event_n !=0)
assignment |>
filter(recipient_name == 'Haiti')
assignment |>
filter(recipient_name == 'Haiti' & year >= cohort_recipient)
estimand_mediator_treatment
estimand_mediator_treatment |>
filter(!is.na(commitment))
# missing in em_dat / treatment data set: Nauru, Wallis and Futuna, Kosovo, Côte d'Ivoire, Tanzania, West Bank and Gaza Strip, China (People's Republic of), Bolivia, Venezuela, Iran, Micronesia, Mayotte
# first, we merge the iso variable from the treatment data set to the estimand data set.
estimand_mediator_iso <- left_join(estimand_mediator, distinct(em_dat, country, iso),
by = c("recipient_name" = "country")) |>
mutate(iso = case_when( # we add the missing ISO
recipient_name == "Côte d'Ivoire" ~ 'CIV',
recipient_name == "Moldova" ~ 'MDA',
recipient_name == "Tanzania" ~ 'TZA',
recipient_name == "China (People's Republic of)" ~ 'CHN',
recipient_name == "Bolivia" ~ 'BOL',
recipient_name == "Venezuela" ~ 'VEN',
recipient_name == "Iran" ~ 'IRN',
recipient_name == "Kosovo" ~ 'XKX',
recipient_name == "Mayotte" ~ 'MYT',
recipient_name == "Micronesia" ~ 'FSM',
recipient_name == "Nauru" ~ 'NRU',
recipient_name == "Wallis and Futuna" ~ 'WLF',
recipient_name == "West Bank and Gaza Strip" ~ 'PSE',
# we also add the ISO of three recipient countries with no observation in the em-dat (treatment) data set
recipient_name == "Equatorial Guinea" ~ 'GNQ',
recipient_name == "Montserrat" ~ 'MSR',
recipient_name == "Turkmenistan" ~ 'TKM',
.default = iso
)) |>
relocate(iso, .after = recipient_name)
# missing data
estimand_mediator_iso |>
sample_n(5000) |>
vis_miss()
estimand_mediator_treatment <- merge(estimand_mediator_iso, treatment[, !'country'], by = c("iso", "year"), all.x = T) |> select(-iso)
estimand_mediator_treatment |>
filter(!is.na(commitment))
estimand_mediator_treatment |>
filter(!is.na(commitment) & !is.na(event_n))
estimand_mediator_treatment |> filter(is.na(commitment) & !is.na(event_n))
estimand_mediator_treatment |>
mutate(across(event_n:declaration_cum, \(x) ifelse(is.na(x) & dummy_universe == 1, replace_na(0), x))) |>
filter(dummy_universe == 1)
estimand_mediator_treatment <- merge(estimand_mediator_iso, treatment[, !'country'],
by = c("iso", "year"), all.x = T) |>
select(-iso)
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(across(event_n:declaration_cum, \(x) ifelse(is.na(x) & dummy_universe == 1, replace_na(0), x)))
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
event_binary = ifelse(event_n %in% c(0,NA), 0, 1),
call_binary = ifelse(call_n %in% c(0,NA), 0, 1),
appeal_binary = ifelse(appeal_n %in% c(0,NA), 0, 1),
declaration_binary = ifelse(declaration_n %in% c(0,NA), 0, 1)
)
# cohort: year where the cumulative number of disasters is the lowest but different from zero
estimand_mediator_treatment <- estimand_mediator_treatment |>
mutate(
cohort_event = if_else(sum(event_cum, na.rm = T) == 0, NA_integer_, min(year[event_cum != 0], na.rm = T)),
cohort_call = if_else(sum(call_cum, na.rm = T) == 0, NA_integer_, min(year[call_cum != 0], na.rm = T)),
cohort_appeal = if_else(sum(appeal_cum, na.rm = T) == 0, NA_integer_, min(year[appeal_cum != 0], na.rm = T)),
cohort_declaration = if_else(sum(declaration_cum, na.rm = T) == 0, NA_integer_, min(year[declaration_cum != 0], na.rm = T)),
.by = recipient_code
)
# convert to factors
assignment <- mutate(estimand_mediator_treatment, across(ends_with('binary'), as_factor))
assignment <- assignment |>
mutate(
id = paste(donor_code, recipient_code, sep = "_"),
id_year = paste(donor_code, recipient_code, year, sep = "_")
) |>
relocate(starts_with("id"), .before = year)
summarize(assignment,
commit = sum(commitment, na.rm = T),
.by = c(recipient_name, year, event_binary)) |>
ggplot(aes(x = event_binary, y = log(disb), colour = event_binary)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "none") +
labs(x="Treatment", y=" Commitment, MUSD (log)",
title = "Yearly commitments to recipient countries",
subtitle = "Treatment: at least one climate-related disaster recorded during the year")
summarize(assignment,
commit = sum(commitment, na.rm = T),
.by = c(recipient_name, year, event_binary)) |>
ggplot(aes(x = event_binary, y = log(commit), colour = event_binary)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "none") +
labs(x="Treatment", y=" Commitment, MUSD (log)",
title = "Yearly commitments to recipient countries",
subtitle = "Treatment: at least one climate-related disaster recorded during the year")
## Binary switching treatment
# pivot to wider
plot_treat_binary <- distinct(assignment,
recipient_name, year, event_binary) |>
mutate(event_binary = as.numeric(levels(event_binary))[event_binary]) |>
pivot_wider(names_from = 'year', values_from = 'event_binary') |>
rowwise() |>
mutate(total = sum(c_across(`2002`:`2022`), na.rm = T)) |>
ungroup() |>
mutate(across(`2002`:`2022`, as.integer)) |>
arrange(desc(total)) |>
column_to_rownames(var="recipient_name")
## Heatmap
# heatmap events
pheatmap::pheatmap(plot_treat_binary |> select(-total),
color = c('red','blue'),
legend_breaks = c(0,1),
legend_labels = c("Not treated", "Treated"),
border_color = "grey90",
cluster_rows = FALSE,
cluster_cols = FALSE,
main = "Binary switching treatment")
## Binary switching treatment
# pivot to wider
plot_call_binary <- distinct(assignment,
recipient_name, year, call_binary) |>
mutate(call_binary = as.numeric(levels(call_binary))[call_binary]) |>
pivot_wider(names_from = 'year', values_from = 'call_binary') |>
rowwise() |>
mutate(total = sum(c_across(`2002`:`2022`), na.rm = T)) |>
ungroup() |>
mutate(across(`2002`:`2022`, as.integer)) |>
arrange(desc(total)) |>
column_to_rownames(var="recipient_name")
## Heatmap
# heatmap events
pheatmap::pheatmap(plot_treat_binary |> select(-total),
color = c('red','blue'),
legend_breaks = c(0,1),
legend_labels = c("Not treated", "Treated"),
border_color = "grey90",
cluster_rows = FALSE,
cluster_cols = FALSE,
main = "Binary switching 'large' treatment")
panelView::panelview(commit_xmarg ~ 1,
data = assignment,
index = c("id","year"),
xlab = "Year", ylab = "Dyads")
panelView::panelview(commitment ~ 1,
data = assignment,
index = c("id","year"),
xlab = "Year", ylab = "Dyads")
View(assignment)
panelView::panelview(commitment ~ 1,
data = assignment,
index = c("id","year"),
xlab = "Year", ylab = "Dyads",
type = "missing")
df <- as.data.frame(assignment)
panelView::panelview(commitment ~ 1,
data = df,
index = c("id","year"),
xlab = "Year", ylab = "Dyads",
type = "missing")
View(assignment)
