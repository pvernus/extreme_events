# merge outcome data
data_outcomes <- merge(sample_recipient, data_recip.outcomes, by=c("recipient_id", "year"), all.x = TRUE) %>%
arrange(recipient_id, year) %>%
mutate(across(commit:commit_per_project,
~ ifelse(universe == 1 & is.na(.), 0, .)))
## EM-DAT (treatment)
# select vars of interest
data.binary_treatment <- data_emdat[, .(recipient_id,
year = start_year,
clim_event,
treatment_all = switching_event_dummy,
treatment_appeal = switching_appeal_dummy)]
# filter for weather and climate events
data_treatment <- data.binary_treatment[clim_event == 1
# summarize to get unit-level: recipient-year
][, .(
treat_all = max(treatment_all, na.rm = T),
treat_appeal = max(treatment_appeal, na.rm = T)
), by = .(recipient_id, year)]
# merge treatment data
data_recip.binary_treatment <- merge(data_outcomes, data_treatment,
by=c("recipient_id", "year"),
all.x = T) |>
mutate(across(starts_with("treat"),
~ ifelse(universe == 1 & is.na(.), 0, .)),
across(starts_with("treat"),
~ ifelse(universe == 0, NA, .))
)
head(data_recip.outcomes)
# sum number of treated years by recipient
names_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[, .(
treated_year_N = sum(treat_appeal, na.rm = T) # appeal only
), by = recipient_name
# order by number of treated years
][order(-treated_year_N)
# keep names of single-treated recipients
][treated_year_N == 1, recipient_name]
# remove recipients w/ more than one treated year
data_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[recipient_name %in% names_recip.appeal.binary_single_treatment, ]
# list single treated recipients
unique(data_recip.appeal.binary_single_treatment$recipient_name)
head(data_recip.appeal.binary_single_treatment)
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = wght_prop_channel_nonstate,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
data |> arrange(-diff)
ggplot(data, aes(x = diff)) +
geom_density() +
theme_minimal()
ggplot(data, aes(x = diff)) +
geom_density() +
theme_minimal() +
facet_wrap(~period) +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
ggplot(data, aes(x = diff, fill=period)) +
geom_density(alpha=.2) +
theme_minimal()
ggplot(data, aes(x = diff, group=period)) +
geom_density(alpha=.2) +
theme_minimal()
ggplot(data, aes(x = diff, group=period, fill=period)) +
geom_density(alpha=.2) +
theme_minimal()
ggplot(data, aes(x = diff, group=period, fill=period)) +
ggridges::geom_density_ridges()
ggplot(data, aes(x = diff, y=period, fill=period)) +
ggridges::geom_density_ridges()
ggplot(data, aes(x = diff, y = as_factor(period), fill=period)) +
ggridges::geom_density_ridges()
ggplot(data, aes(x = diff, y = as_factor(period), fill=as_factor(period))) +
ggridges::geom_density_ridges()
ggplot(data, aes(x = diff, y = as_factor(period), fill=as_factor(period))) +
ggridges::geom_density_ridges(alpha=.2) +
theme_minimal()
ggplot(data, aes(x = diff, y = as_factor(period), fill=as_factor(period))) +
ggridges::geom_density_ridges(alpha=.2) +
theme_minimal() +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
ggplot(data, aes(x = diff, y = as_factor(period), fill=as_factor(period))) +
ggridges::geom_density_ridges(alpha=.2) +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
?fct_relevel
?fct_reorder
?as_factor
data |>
mutate(period = factor(period, levels=c("-2", "-1", "0", "1", 2))) |>
ggplot(data, aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
data |>
mutate(period = factor(period, levels=c("-2", "-1", "0", "1", 2)))
data |>
mutate(period = factor(period, levels=c("-2", "-1", "0", "1", 2))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
data |>
mutate(period = factor(period, levels=c("-2", "-1", "0", "1", 2))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_brewer(palette = "YlGn") +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
data |>
mutate(period = factor(period, levels=c("-2", "-1", "0", "1", "2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_brewer(palette = "YlGn") +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_brewer(palette = "YlGn") +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of yearly changes in the size of projects in affected countries\ntwo periods pre/post-disaster",
x="Change in commitments (USD, Millions)",
y="Number of countries")
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = wght_prop_channel_nonstate,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
# head(data)
# data |> arrange(-diff)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of yearly changes in the share of commitments through non-state channels in affected countries\ntwo periods pre/post-disaster",
x="% change",
y="Number of countries")
ggbetweenstats(
data = data,
x = period,
y = diff,
centrality.plotting = TRUE,
type="np",
bf.message = F,
results.subtitle = F,
violin.args = list(width = 0, linewidth = 0),
xlab = "Period (treatment = 0)",
ylab = "% change",
title = "Yearly change in the share of commitments through non-state channels in affected countries\ntwo periods pre/post-disaster"
)
slice_min(data, diff, n=3, by = period) |> arrange(period)
slice_max(data, diff, n=3, by = period) |> arrange(period)
## UNIT-LEVEL: recipient-year
sample_recipient <- data_crs |>
expand(nesting(recipient_id, recipient_name, cohort_recipient), year) |>
filter(!grepl("regional", recipient_name)) |> # remove "regional" recipients
fmutate(universe = ifelse(cohort_recipient <= year, 1, 0)) |>
setDT()
## OECD CRS (outcome variables)
# select vars
data_recip.outcomes <- data_crs[, .(year, recipient_id, donor_id, donor_name, sector_id, sector_name, crs_id, usd_commitment_defl, channel_nonstate, channel_nonstate_ngo, channel_nonstate_multi, n_projects)
# summarize to get unit-level: recipient-year
][, .(
commit = sum(usd_commitment_defl, na.rm = T),
n_donors = uniqueN(donor_id[usd_commitment_defl != 0]),
n_sectors = uniqueN(sector_id[usd_commitment_defl != 0]),
n_projects = uniqueN(crs_id, na.rm = T),
sh_commit.channel_nonstate = sum(usd_commitment_defl[channel_nonstate=="1"], na.rm = T)/
sum(usd_commitment_defl, na.rm = T)*100,
sh_commit.channel_nonstate_ngo = sum(usd_commitment_defl[channel_nonstate_ngo=="1"], na.rm = T)/
sum(usd_commitment_defl, na.rm = T)*100,
sh_commit.channel_nonstate_multi = sum(usd_commitment_defl[channel_nonstate_multi=="1"], na.rm = T)/
sum(usd_commitment_defl, na.rm = T)*100,
sh_proj.channel_nonstate = n_distinct(crs_id[channel_nonstate=="1"])/n_distinct(crs_id)*100,
sh_proj.channel_nonstate_ngo = n_distinct(crs_id[channel_nonstate_ngo=="1"])/n_distinct(crs_id)*100,
sh_proj.channel_nonstate_multi = n_distinct(crs_id[channel_nonstate_multi=="1"])/n_distinct(crs_id)*100
), .(recipient_id, year)
][order(recipient_id, year)
# add var on commitment per projects in recipient countries per year
][, commit_per_project := commit / n_projects]
# merge outcome data
data_outcomes <- merge(sample_recipient, data_recip.outcomes, by=c("recipient_id", "year"), all.x = TRUE) %>%
arrange(recipient_id, year) %>%
mutate(across(commit:commit_per_project,
~ ifelse(universe == 1 & is.na(.), 0, .)))
## EM-DAT (treatment)
# select vars of interest
data.binary_treatment <- data_emdat[, .(recipient_id,
year = start_year,
clim_event,
treatment_all = switching_event_dummy,
treatment_appeal = switching_appeal_dummy)]
# filter for weather and climate events
data_treatment <- data.binary_treatment[clim_event == 1
# summarize to get unit-level: recipient-year
][, .(
treat_all = max(treatment_all, na.rm = T),
treat_appeal = max(treatment_appeal, na.rm = T)
), by = .(recipient_id, year)]
# merge treatment data
data_recip.binary_treatment <- merge(data_outcomes, data_treatment,
by=c("recipient_id", "year"),
all.x = T) |>
mutate(across(starts_with("treat"),
~ ifelse(universe == 1 & is.na(.), 0, .)),
across(starts_with("treat"),
~ ifelse(universe == 0, NA, .))
)
# sum number of treated years by recipient
names_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[, .(
treated_year_N = sum(treat_appeal, na.rm = T) # appeal only
), by = recipient_name
# order by number of treated years
][order(-treated_year_N)
# keep names of single-treated recipients
][treated_year_N == 1, recipient_name]
# remove recipients w/ more than one treated year
data_recip.appeal.binary_single_treatment <- data_recip.binary_treatment[recipient_name %in% names_recip.appeal.binary_single_treatment, ]
# list single treated recipients
unique(data_recip.appeal.binary_single_treatment$recipient_name)
data_recip.appeal.binary_single_treatment
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = sh_commit.channel_nonstate,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
# head(data)
# data |> arrange(-diff)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of yearly changes in the share of commitments through non-state channels in affected countries\ntwo periods pre/post-disaster",
x="% change",
y="Number of countries")
ggbetweenstats(
data = data,
x = period,
y = diff,
centrality.plotting = TRUE,
type="np",
bf.message = F,
results.subtitle = F,
violin.args = list(width = 0, linewidth = 0),
xlab = "Period (treatment = 0)",
ylab = "% change",
title = "Yearly change in the share of commitments through non-state channels in affected countries\ntwo periods pre/post-disaster"
)
slice_min(data, diff, n=3, by = period) |> arrange(period)
slice_max(data, diff, n=3, by = period) |> arrange(period)
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = sh_commit.channel_nonstate,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
# head(data)
# data |> arrange(-diff)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="% change",
y="Number of countries")
ggbetweenstats(
data = data,
x = period,
y = diff,
centrality.plotting = TRUE,
type="np",
bf.message = F,
results.subtitle = F,
violin.args = list(width = 0, linewidth = 0),
xlab = "Period (treatment = 0)",
ylab = "% change",
title = "Annual percentage point change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster"
)
slice_min(data, diff, n=3, by = period) |> arrange(period)
slice_max(data, diff, n=3, by = period) |> arrange(period)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = sh_commit.channel_nonstate_ngo,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
# head(data)
# data |> arrange(-diff)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through NGOs\ntwo periods pre/post-disaster",
x="Annual % point change")
ggbetweenstats(
data = data,
x = period,
y = diff,
centrality.plotting = TRUE,
type="np",
bf.message = F,
results.subtitle = F,
violin.args = list(width = 0, linewidth = 0),
xlab = "Period (treatment = 0)",
ylab = "% change",
title = "Annual percentage point change in the proportion of commitments channelled through NGOs\ntwo periods pre/post-disaster"
)
slice_min(data, diff, n=3, by = period) |> arrange(period)
slice_max(data, diff, n=3, by = period) |> arrange(period)
summarize(data,
mean=mean(diff, na.rm = T),
median=median(diff, na.rm = T),
.by = period)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
geom_vline(data=stat, aes(xintercept = mean), color="grey50") +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
geom_vline(data=stat, aes(xintercept = mean, color=period)) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
stat <- summarize(data,
mean=mean(diff, na.rm = T),
median=median(diff, na.rm = T),
.by = period)
stat
stat <- summarize(data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))),
mean=mean(diff, na.rm = T),
median=median(diff, na.rm = T),
.by = period)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
geom_vline(data=stat, aes(xintercept = mean, color=period)) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
geom_vline(data=stat, aes(xintercept = mean)) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
# select relevant vars
between_periods_comparison <- data_recip.appeal.binary_single_treatment[, .(
recipient_id, recipient_name,
year,
outcome = sh_commit.channel_nonstate,
treatment = treat_appeal
)
# remove "false" zeroes, i.e., missing obs. due to recipient not registered in crs a period t
][!is.na(treatment),
# order observations
][order(recipient_id, year),
# create new variable `period` where treatment year = 0
][, period := year - year[treatment==1], by = recipient_id
# create new var `lag1`
][, lag1 := shift(outcome, type = "lag"), by = recipient_id
# create new var `diff`
][, diff := outcome - lag1]
# head(between_periods_comparison)
data <- between_periods_comparison[period %in% c(-2:2)]
# head(data)
# data |> arrange(-diff)
data |>
mutate(period = factor(period, levels=c("2", "1", "0", "-1", "-2"))) |>
ggplot(aes(x = diff, y = period, fill=period)) +
ggridges::geom_density_ridges(alpha=.2) +
scale_fill_viridis_d() +
theme_minimal() +
labs(title="Distribution of annual perc. pt. change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster",
x="Annual % point change")
ggbetweenstats(
data = data,
x = period,
y = diff,
centrality.plotting = TRUE,
type="np",
bf.message = F,
results.subtitle = F,
violin.args = list(width = 0, linewidth = 0),
xlab = "Period (treatment = 0)",
ylab = "% change",
title = "Annual percentage point change in the proportion of commitments channelled through non-state entities\ntwo periods pre/post-disaster"
)
slice_min(data, diff, n=3, by = period) |> arrange(period)
slice_max(data, diff, n=3, by = period) |> arrange(period)
